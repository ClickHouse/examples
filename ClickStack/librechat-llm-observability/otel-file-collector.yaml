receivers:
  filelog:
    include:
      - /var/log/librechat/console.log
      - /var/log/librechat/mcp-clickhouse/mcp.log
    start_at: beginning
    operators:
      - type: json_parser
        id: parse_json_log
        on_error: send_quiet
        timestamp:
          parse_from: attributes.timestamp
          layout_type: gotime
          layout: '2006-01-02T15:04:05.000Z'
        severity:
          parse_from: attributes.level

      - type: trace_parser
        trace_id:
          parse_from: attributes.trace_id
        span_id:
          parse_from: attributes.span_id

      - type: move
        id: promote_message
        from: attributes.message
        to: body
        if: 'attributes.message != nil'
      - type: regex_parser
        id: extract_conversation_id
        # look in the body line for conversationId
        parse_from: body
        regex: "conversationId: (?P<conversationId>[0-9a-fA-F-]+)"
        on_error: send_quiet

  prometheus:
    config:
      scrape_configs:
        - job_name: 'librechat_metrics'
          scrape_interval: 15s
          static_configs:
            - targets: ['host.docker.internal:8000']

processors:
  transform:
    error_mode: ignore
    log_statements:
    - set(resource.attributes["service.name"], "librechat-api") where log.attributes["log.file.name"] == "console.log"
    - set(resource.attributes["service.name"], "mcp-clickhouse") where log.attributes["log.file.name"] == "mcp.log"
  resource:
    attributes:
      - key: service.name
        value: librechat-api
        action: upsert

exporters:
  otlp:
    endpoint: http://host.docker.internal:4317
    headers:
      authorization: ${CLICKSTACK_API_KEY}
    tls:
      insecure: true

service:
  pipelines:
    logs:
      receivers: [filelog]
      processors: [resource, transform]
      exporters: [otlp]
    metrics:
      receivers: [prometheus]
      processors: [resource]
      exporters: [otlp]

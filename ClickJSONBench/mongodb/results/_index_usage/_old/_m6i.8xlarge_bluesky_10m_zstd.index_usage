------------------------------------------------------------------------------------------------------------------------
Index usage for query Q1:

{
  isCached: false,
  queryPlan: {
    stage: 'GROUP',
    planNodeId: 3,
    inputStage: {
      stage: 'COLLSCAN',
      planNodeId: 1,
      filter: {},
      direction: 'forward'
    }
  },
  slotBasedPlan: {
    slots: '$$RESULT=s9 env: {  }',
    stages: '[3] project [s9 = newObj("_id", s6, "count", s8)] \n' +
      '[3] project [s8 = (convert ( s7, int32) ?: s7)] \n' +
      '[3] group [s6] [s7 = count()] spillSlots[s5] mergingExprs[sum(s5)] \n' +
      '[3] project [s6 = (s4 ?: null)] \n' +
      '[3] project [s4 = traverseP(s1, lambda(l2.0) { getField(move(l2.0), "collection") }, 1)] \n' +
      '[1] scan s2 s3 none none none none none none lowPriority [s1 = commit] @"3cedc739-646c-419b-84b6-540fca46e2ab" true false '
  }
}
------------------------------------------------------------------------------------------------------------------------
Index usage for query Q2:

{
  isCached: false,
  queryPlan: {
    stage: 'GROUP',
    planNodeId: 4,
    inputStage: {
      stage: 'FETCH',
      planNodeId: 2,
      inputStage: {
        stage: 'IXSCAN',
        planNodeId: 1,
        keyPattern: {
          kind: 1,
          'commit.operation': 1,
          'commit.collection': 1,
          time_us: 1
        },
        indexName: 'kind_1_commit.operation_1_commit.collection_1_time_us_1',
        isMultiKey: false,
        multiKeyPaths: {
          kind: [],
          'commit.operation': [],
          'commit.collection': [],
          time_us: []
        },
        isUnique: false,
        isSparse: false,
        isPartial: false,
        indexVersion: 2,
        direction: 'forward',
        indexBounds: {
          kind: [
            '["commit", "commit"]'
          ],
          'commit.operation': [
            '["create", "create"]'
          ],
          'commit.collection': [
            '[MinKey, MaxKey]'
          ],
          time_us: [
            '[MinKey, MaxKey]'
          ]
        }
      }
    }
  },
  slotBasedPlan: {
    slots: '$$RESULT=s20 env: { s1 = KS(3C636F6D6D6974003C637265617465000A0A0104), s2 = KS(3C636F6D6D6974003C63726561746500F0F0FE04), s7 = {"kind" : 1, "commit.operation" : 1, "commit.collection" : 1, "time_us" : 1} }',
    stages: '[4] project [s20 = newObj("_id", s15, "count", s18, "users", s19)] \n' +
      '[4] project [s18 = (convert ( s16, int32) ?: s16), s19 = getElement(s17, 0)] \n' +
      '[4] group [s15] [s16 = count(), s17 = addToSetCapped(s11, 104857600)] spillSlots[s13, s14] mergingExprs[sum(s13), aggSetUnionCapped(s14, 104857600)] \n' +
      '[4] project [s15 = (s12 ?: null)] \n' +
      '[4] project [s12 = traverseP(s10, lambda(l2.0) { getField(move(l2.0), "collection") }, 1)] \n' +
      '[2] nlj inner [] [s3, s4, s5, s6, s7] \n' +
      '    left \n' +
      '        [1] cfilter {(exists(s1) && exists(s2))} \n' +
      '        [1] ixseek s1 s2 s6 s3 s4 s5 [] @"3cedc739-646c-419b-84b6-540fca46e2ab" @"kind_1_commit.operation_1_commit.collection_1_time_us_1" true \n' +
      '    right \n' +
      '        [2] limit 1ll \n' +
      '        [2] seek s3 s8 s9 s4 s5 s6 s7 none none [s10 = commit, s11 = did] @"3cedc739-646c-419b-84b6-540fca46e2ab" true false \n'
  }
}
------------------------------------------------------------------------------------------------------------------------
Index usage for query Q3:

{
  isCached: false,
  stage: 'PROJECTION_DEFAULT',
  transformBy: {
    _id: true,
    event: '$commit.collection',
    hour_of_day: {
      '$hour': {
        date: {
          '$convert': {
            input: {
              '$divide': [
                '$time_us',
                {
                  '$const': 1000
                }
              ]
            },
            to: {
              '$const': 'date'
            }
          }
        }
      }
    }
  },
  inputStage: {
    stage: 'FETCH',
    inputStage: {
      stage: 'IXSCAN',
      keyPattern: {
        kind: 1,
        'commit.operation': 1,
        'commit.collection': 1,
        time_us: 1
      },
      indexName: 'kind_1_commit.operation_1_commit.collection_1_time_us_1',
      isMultiKey: false,
      multiKeyPaths: {
        kind: [],
        'commit.operation': [],
        'commit.collection': [],
        time_us: []
      },
      isUnique: false,
      isSparse: false,
      isPartial: false,
      indexVersion: 2,
      direction: 'forward',
      indexBounds: {
        kind: [
          '["commit", "commit"]'
        ],
        'commit.operation': [
          '["create", "create"]'
        ],
        'commit.collection': [
          '["app.bsky.feed.like", "app.bsky.feed.like"]',
          '["app.bsky.feed.post", "app.bsky.feed.post"]',
          '["app.bsky.feed.repost", "app.bsky.feed.repost"]'
        ],
        time_us: [
          '[MinKey, MaxKey]'
        ]
      }
    }
  }
}
------------------------------------------------------------------------------------------------------------------------
Index usage for query Q4:

{
  isCached: false,
  stage: 'PROJECTION_DEFAULT',
  transformBy: {
    _id: true,
    user_id: '$did',
    timestamp: {
      '$convert': {
        input: {
          '$divide': [
            '$time_us',
            {
              '$const': 1000
            }
          ]
        },
        to: {
          '$const': 'date'
        }
      }
    }
  },
  inputStage: {
    stage: 'FETCH',
    inputStage: {
      stage: 'IXSCAN',
      keyPattern: {
        kind: 1,
        'commit.operation': 1,
        'commit.collection': 1,
        time_us: 1
      },
      indexName: 'kind_1_commit.operation_1_commit.collection_1_time_us_1',
      isMultiKey: false,
      multiKeyPaths: {
        kind: [],
        'commit.operation': [],
        'commit.collection': [],
        time_us: []
      },
      isUnique: false,
      isSparse: false,
      isPartial: false,
      indexVersion: 2,
      direction: 'forward',
      indexBounds: {
        kind: [
          '["commit", "commit"]'
        ],
        'commit.operation': [
          '["create", "create"]'
        ],
        'commit.collection': [
          '["app.bsky.feed.post", "app.bsky.feed.post"]'
        ],
        time_us: [
          '[MinKey, MaxKey]'
        ]
      }
    }
  }
}
------------------------------------------------------------------------------------------------------------------------
Index usage for query Q5:

{
  isCached: false,
  stage: 'PROJECTION_DEFAULT',
  transformBy: {
    _id: true,
    user_id: '$did',
    timestamp: {
      '$convert': {
        input: {
          '$divide': [
            '$time_us',
            {
              '$const': 1000
            }
          ]
        },
        to: {
          '$const': 'date'
        }
      }
    }
  },
  inputStage: {
    stage: 'FETCH',
    inputStage: {
      stage: 'IXSCAN',
      keyPattern: {
        kind: 1,
        'commit.operation': 1,
        'commit.collection': 1,
        time_us: 1
      },
      indexName: 'kind_1_commit.operation_1_commit.collection_1_time_us_1',
      isMultiKey: false,
      multiKeyPaths: {
        kind: [],
        'commit.operation': [],
        'commit.collection': [],
        time_us: []
      },
      isUnique: false,
      isSparse: false,
      isPartial: false,
      indexVersion: 2,
      direction: 'forward',
      indexBounds: {
        kind: [
          '["commit", "commit"]'
        ],
        'commit.operation': [
          '["create", "create"]'
        ],
        'commit.collection': [
          '["app.bsky.feed.post", "app.bsky.feed.post"]'
        ],
        time_us: [
          '[MinKey, MaxKey]'
        ]
      }
    }
  }
}
------------------------------------------------------------------------------------------------------------------------
Index usage for query Q1:

{
  isCached: false,
  queryPlan: {
    stage: 'GROUP',
    planNodeId: 3,
    inputStage: {
      stage: 'IXSCAN',
      planNodeId: 1,
      keyPattern: {
        kind: 1,
        'commit.operation': 1,
        'commit.collection': 1,
        did: 1,
        time_us: 1
      },
      indexName: 'kind_1_commit.operation_1_commit.collection_1_did_1_time_us_1',
      isMultiKey: false,
      multiKeyPaths: {
        kind: [],
        'commit.operation': [],
        'commit.collection': [],
        did: [],
        time_us: []
      },
      isUnique: false,
      isSparse: false,
      isPartial: false,
      indexVersion: 2,
      direction: 'forward',
      indexBounds: {
        kind: [
          '[MinKey, MaxKey]'
        ],
        'commit.operation': [
          '[MinKey, MaxKey]'
        ],
        'commit.collection': [
          '[MinKey, MaxKey]'
        ],
        did: [
          '[MinKey, MaxKey]'
        ],
        time_us: [
          '[MinKey, MaxKey]'
        ]
      }
    }
  },
  slotBasedPlan: {
    slots: '$$RESULT=s14 env: {  }',
    stages: '[3] project [s14 = newObj("_id", s11, "count", s13)] \n' +
      '[3] project [s13 = (convert ( s12, int32) ?: s12)] \n' +
      '[3] group [s11] [s12 = count()] spillSlots[s10] mergingExprs[sum(s10)] \n' +
      '[3] project [s11 = (s9 ?: null)] \n' +
      '[3] project [s9 = traverseP(s8, lambda(l2.0) { getField(move(l2.0), "collection") }, 1)] \n' +
      '[1] project [s8 = getField(s7, "commit")] \n' +
      '[1] project [s7 = newObj("kind", s1, "commit", newObj("operation", s2, "collection", s3), "did", s4, "time_us", s5)] \n' +
      '[1] ixseek KS(0A0A0A0A0A0104) KS(F0F0F0F0F0FE04) none s6 none none lowPriority [s1 = 0, s2 = 1, s3 = 2, s4 = 3, s5 = 4] @"f2271270-5add-48df-a55d-a450bcc63fd6" @"kind_1_commit.operation_1_commit.collection_1_did_1_time_us_1" true '
  }
}
------------------------------------------------------------------------------------------------------------------------
Index usage for query Q2:

{
  isCached: false,
  queryPlan: {
    stage: 'GROUP',
    planNodeId: 3,
    inputStage: {
      stage: 'IXSCAN',
      planNodeId: 1,
      keyPattern: {
        kind: 1,
        'commit.operation': 1,
        'commit.collection': 1,
        did: 1,
        time_us: 1
      },
      indexName: 'kind_1_commit.operation_1_commit.collection_1_did_1_time_us_1',
      isMultiKey: false,
      multiKeyPaths: {
        kind: [],
        'commit.operation': [],
        'commit.collection': [],
        did: [],
        time_us: []
      },
      isUnique: false,
      isSparse: false,
      isPartial: false,
      indexVersion: 2,
      direction: 'forward',
      indexBounds: {
        kind: [
          '["commit", "commit"]'
        ],
        'commit.operation': [
          '["create", "create"]'
        ],
        'commit.collection': [
          '[MinKey, MaxKey]'
        ],
        did: [
          '[MinKey, MaxKey]'
        ],
        time_us: [
          '[MinKey, MaxKey]'
        ]
      }
    }
  },
  slotBasedPlan: {
    slots: '$$RESULT=s19 env: { s6 = KS(3C636F6D6D6974003C637265617465000A0A0A0104), s7 = KS(3C636F6D6D6974003C63726561746500F0F0F0FE04) }',
    stages: '[3] project [s19 = newObj("_id", s14, "count", s17, "users", s18)] \n' +
      '[3] project [s17 = (convert ( s15, int32) ?: s15), s18 = getElement(s16, 0)] \n' +
      '[3] group [s14] [s15 = count(), s16 = addToSetCapped(s4, 1073741824)] spillSlots[s12, s13] mergingExprs[sum(s12), aggSetUnionCapped(s13, 1073741824)] \n' +
      '[3] project [s14 = (s11 ?: null)] \n' +
      '[3] project [s11 = traverseP(s10, lambda(l2.0) { getField(move(l2.0), "collection") }, 1)] \n' +
      '[1] project [s10 = getField(s9, "commit")] \n' +
      '[1] project [s9 = newObj("kind", s1, "commit", newObj("operation", s2, "collection", s3), "did", s4, "time_us", s5)] \n' +
      '[1] cfilter {(exists(s6) && exists(s7))} \n' +
      '[1] ixseek s6 s7 none s8 none none [s1 = 0, s2 = 1, s3 = 2, s4 = 3, s5 = 4] @"f2271270-5add-48df-a55d-a450bcc63fd6" @"kind_1_commit.operation_1_commit.collection_1_did_1_time_us_1" true '
  }
}
------------------------------------------------------------------------------------------------------------------------
Index usage for query Q3:

{
  isCached: false,
  stage: 'PROJECTION_DEFAULT',
  transformBy: {
    event: '$commit.collection',
    hour_of_day: {
      '$hour': {
        date: {
          '$convert': {
            input: {
              '$divide': [
                '$time_us',
                {
                  '$const': 1000
                }
              ]
            },
            to: {
              '$const': 'date'
            }
          }
        }
      }
    },
    _id: false
  },
  inputStage: {
    stage: 'IXSCAN',
    keyPattern: {
      kind: 1,
      'commit.operation': 1,
      'commit.collection': 1,
      did: 1,
      time_us: 1
    },
    indexName: 'kind_1_commit.operation_1_commit.collection_1_did_1_time_us_1',
    isMultiKey: false,
    multiKeyPaths: {
      kind: [],
      'commit.operation': [],
      'commit.collection': [],
      did: [],
      time_us: []
    },
    isUnique: false,
    isSparse: false,
    isPartial: false,
    indexVersion: 2,
    direction: 'forward',
    indexBounds: {
      kind: [
        '["commit", "commit"]'
      ],
      'commit.operation': [
        '["create", "create"]'
      ],
      'commit.collection': [
        '["app.bsky.feed.like", "app.bsky.feed.like"]',
        '["app.bsky.feed.post", "app.bsky.feed.post"]',
        '["app.bsky.feed.repost", "app.bsky.feed.repost"]'
      ],
      did: [
        '[MinKey, MaxKey]'
      ],
      time_us: [
        '[MinKey, MaxKey]'
      ]
    }
  }
}
------------------------------------------------------------------------------------------------------------------------
Index usage for query Q4:

{
  isCached: false,
  stage: 'PROJECTION_DEFAULT',
  transformBy: {
    user_id: '$did',
    timestamp: {
      '$convert': {
        input: {
          '$divide': [
            '$time_us',
            {
              '$const': 1000
            }
          ]
        },
        to: {
          '$const': 'date'
        }
      }
    },
    _id: false
  },
  inputStage: {
    stage: 'IXSCAN',
    keyPattern: {
      kind: 1,
      'commit.operation': 1,
      'commit.collection': 1,
      did: 1,
      time_us: 1
    },
    indexName: 'kind_1_commit.operation_1_commit.collection_1_did_1_time_us_1',
    isMultiKey: false,
    multiKeyPaths: {
      kind: [],
      'commit.operation': [],
      'commit.collection': [],
      did: [],
      time_us: []
    },
    isUnique: false,
    isSparse: false,
    isPartial: false,
    indexVersion: 2,
    direction: 'forward',
    indexBounds: {
      kind: [
        '["commit", "commit"]'
      ],
      'commit.operation': [
        '["create", "create"]'
      ],
      'commit.collection': [
        '["app.bsky.feed.post", "app.bsky.feed.post"]'
      ],
      did: [
        '[MinKey, MaxKey]'
      ],
      time_us: [
        '[MinKey, MaxKey]'
      ]
    }
  }
}
------------------------------------------------------------------------------------------------------------------------
Index usage for query Q5:

{
  isCached: false,
  stage: 'PROJECTION_DEFAULT',
  transformBy: {
    user_id: '$did',
    timestamp: {
      '$convert': {
        input: {
          '$divide': [
            '$time_us',
            {
              '$const': 1000
            }
          ]
        },
        to: {
          '$const': 'date'
        }
      }
    },
    _id: false
  },
  inputStage: {
    stage: 'IXSCAN',
    keyPattern: {
      kind: 1,
      'commit.operation': 1,
      'commit.collection': 1,
      did: 1,
      time_us: 1
    },
    indexName: 'kind_1_commit.operation_1_commit.collection_1_did_1_time_us_1',
    isMultiKey: false,
    multiKeyPaths: {
      kind: [],
      'commit.operation': [],
      'commit.collection': [],
      did: [],
      time_us: []
    },
    isUnique: false,
    isSparse: false,
    isPartial: false,
    indexVersion: 2,
    direction: 'forward',
    indexBounds: {
      kind: [
        '["commit", "commit"]'
      ],
      'commit.operation': [
        '["create", "create"]'
      ],
      'commit.collection': [
        '["app.bsky.feed.post", "app.bsky.feed.post"]'
      ],
      did: [
        '[MinKey, MaxKey]'
      ],
      time_us: [
        '[MinKey, MaxKey]'
      ]
    }
  }
}
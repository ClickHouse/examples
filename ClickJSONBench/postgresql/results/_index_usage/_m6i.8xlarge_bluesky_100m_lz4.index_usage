------------------------------------------------------------------------------------------------------------------------
Index usage for query Q1:

 Sort  (cost=7429414.86..7429414.89 rows=13 width=40)
   Sort Key: (count(*)) DESC
   ->  Finalize GroupAggregate  (cost=7429411.26..7429414.62 rows=13 width=40)
         Group Key: (((data -> 'commit'::text) ->> 'collection'::text))
         ->  Gather Merge  (cost=7429411.26..7429414.29 rows=26 width=40)
               Workers Planned: 2
               ->  Sort  (cost=7428411.24..7428411.27 rows=13 width=40)
                     Sort Key: (((data -> 'commit'::text) ->> 'collection'::text))
                     ->  Partial HashAggregate  (cost=7428410.80..7428411.00 rows=13 width=40)
                           Group Key: ((data -> 'commit'::text) ->> 'collection'::text)
                           ->  Parallel Seq Scan on bluesky  (cost=0.00..7236413.10 rows=38399540 width=32)
 JIT:
   Functions: 7
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q2:

 Sort  (cost=60249107.17..60249107.20 rows=13 width=48)
   Sort Key: (count(*)) DESC
   ->  GroupAggregate  (cost=49181017.33..60249106.93 rows=13 width=48)
         Group Key: (((data -> 'commit'::text) ->> 'collection'::text))
         ->  Gather Merge  (cost=49181017.33..59373927.05 rows=87517969 width=564)
               Workers Planned: 2
               ->  Sort  (cost=49180017.31..49271181.86 rows=36465820 width=564)
                     Sort Key: (((data -> 'commit'::text) ->> 'collection'::text)), ((data ->> 'did'::text))
                     ->  Parallel Seq Scan on bluesky  (cost=0.00..7706738.75 rows=36465820 width=564)
                           Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text))
 JIT:
   Functions: 8
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q3:

 Finalize GroupAggregate  (cost=13437259.36..21381108.43 rows=52041101 width=72)
   Group Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
   ->  Gather Merge  (cost=13437259.36..19364515.77 rows=43367584 width=72)
         Workers Planned: 2
         ->  Partial GroupAggregate  (cost=13436259.33..14357820.49 rows=21683792 width=72)
               Group Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
               ->  Sort  (cost=13436259.33..13490468.81 rows=21683792 width=64)
                     Sort Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
                     ->  Parallel Seq Scan on bluesky  (cost=0.00..8348290.95 rows=21683792 width=64)
                           Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = ANY ('{app.bsky.feed.post,app.bsky.feed.repost,app.bsky.feed.like}'::text[])))
 JIT:
   Functions: 11
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q4:

 Limit  (cost=11532282.45..11532282.45 rows=3 width=40)
   ->  Sort  (cost=11532282.45..11550785.20 rows=7401103 width=40)
         Sort Key: (min(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))))
         ->  Finalize GroupAggregate  (cost=10493447.65..11436624.58 rows=7401103 width=40)
               Group Key: ((data ->> 'did'::text))
               ->  Gather Merge  (cost=10493447.65..11313272.86 rows=6167586 width=40)
                     Workers Planned: 2
                     ->  Partial GroupAggregate  (cost=10492447.62..10600380.38 rows=3083793 width=40)
                           Group Key: ((data ->> 'did'::text))
                           ->  Sort  (cost=10492447.62..10500157.11 rows=3083793 width=564)
                                 Sort Key: ((data ->> 'did'::text))
                                 ->  Parallel Seq Scan on bluesky  (cost=0.00..7820115.68 rows=3083793 width=564)
                                       Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
 JIT:
   Functions: 13
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q5:

 Limit  (cost=11657176.06..11657176.07 rows=3 width=64)
   ->  Sort  (cost=11657176.06..11675678.82 rows=7401103 width=64)
         Sort Key: ((EXTRACT(epoch FROM (max(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))) - min(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))))) * '1000'::numeric)) DESC
         ->  Finalize GroupAggregate  (cost=10493447.65..11561518.19 rows=7401103 width=64)
               Group Key: ((data ->> 'did'::text))
               ->  Gather Merge  (cost=10493447.65..11367239.24 rows=6167586 width=48)
                     Workers Planned: 2
                     ->  Partial GroupAggregate  (cost=10492447.62..10654346.76 rows=3083793 width=48)
                           Group Key: ((data ->> 'did'::text))
                           ->  Sort  (cost=10492447.62..10500157.11 rows=3083793 width=564)
                                 Sort Key: ((data ->> 'did'::text))
                                 ->  Parallel Seq Scan on bluesky  (cost=0.00..7820115.68 rows=3083793 width=564)
                                       Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
 JIT:
   Functions: 13
   Options: Inlining true, Optimization true, Expressions true, Deforming true
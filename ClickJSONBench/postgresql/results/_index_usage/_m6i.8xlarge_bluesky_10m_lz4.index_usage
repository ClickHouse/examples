------------------------------------------------------------------------------------------------------------------------
Index usage for query Q1:

 Sort  (cost=626952.86..626952.89 rows=13 width=40)
   Sort Key: (count(*)) DESC
   ->  Finalize GroupAggregate  (cost=626949.26..626952.62 rows=13 width=40)
         Group Key: (((data -> 'commit'::text) ->> 'collection'::text))
         ->  Gather Merge  (cost=626949.26..626952.29 rows=26 width=40)
               Workers Planned: 2
               ->  Sort  (cost=625949.24..625949.27 rows=13 width=40)
                     Sort Key: (((data -> 'commit'::text) ->> 'collection'::text))
                     ->  Partial HashAggregate  (cost=625948.80..625948.99 rows=13 width=40)
                           Group Key: ((data -> 'commit'::text) ->> 'collection'::text)
                           ->  Parallel Seq Scan on bluesky  (cost=0.00..611362.60 rows=2917240 width=32)
 JIT:
   Functions: 7
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q2:

 Sort  (cost=3938053.37..3938053.40 rows=13 width=48)
   Sort Key: (count(*)) DESC
   ->  GroupAggregate  (cost=3091561.57..3938053.13 rows=13 width=48)
         Group Key: (((data -> 'commit'::text) ->> 'collection'::text))
         ->  Gather Merge  (cost=3091561.57..3871118.89 rows=6693405 width=573)
               Workers Planned: 2
               ->  Sort  (cost=3090561.55..3097533.85 rows=2788919 width=573)
                     Sort Key: (((data -> 'commit'::text) ->> 'collection'::text)), ((data ->> 'did'::text))
                     ->  Parallel Seq Scan on bluesky  (cost=0.00..647186.49 rows=2788919 width=573)
                           Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text))
 JIT:
   Functions: 8
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q3:

 Finalize GroupAggregate  (cost=1008063.29..1641903.86 rows=4152366 width=72)
   Group Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
   ->  Gather Merge  (cost=1008063.29..1480999.69 rows=3460304 width=72)
         Workers Planned: 2
         ->  Partial GroupAggregate  (cost=1007063.26..1080594.72 rows=1730152 width=72)
               Group Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
               ->  Sort  (cost=1007063.26..1011388.64 rows=1730152 width=64)
                     Sort Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
                     ->  Parallel Seq Scan on bluesky  (cost=0.00..697696.17 rows=1730152 width=64)
                           Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = ANY ('{app.bsky.feed.post,app.bsky.feed.repost,app.bsky.feed.like}'::text[])))
 JIT:
   Functions: 11
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q4:

 Limit  (cost=854333.93..854333.94 rows=3 width=40)
   ->  Sort  (cost=854333.93..854584.74 rows=100322 width=40)
         Sort Key: (min(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))))
         ->  GroupAggregate  (cost=0.56..853037.29 rows=100322 width=40)
               Group Key: (data ->> 'did'::text)
               ->  Index Scan using idx_bluesky on bluesky  (cost=0.56..838820.37 rows=648145 width=573)
                     Index Cond: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
 JIT:
   Functions: 8
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q5:

 Limit  (cost=866428.89..866428.89 rows=3 width=64)
   ->  Sort  (cost=866428.89..866679.69 rows=100322 width=64)
         Sort Key: ((EXTRACT(epoch FROM (max(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))) - min(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))))) * '1000'::numeric)) DESC
         ->  GroupAggregate  (cost=0.56..865132.24 rows=100322 width=64)
               Group Key: (data ->> 'did'::text)
               ->  Index Scan using idx_bluesky on bluesky  (cost=0.56..838820.37 rows=648145 width=573)
                     Index Cond: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
 JIT:
   Functions: 8
   Options: Inlining true, Optimization true, Expressions true, Deforming true
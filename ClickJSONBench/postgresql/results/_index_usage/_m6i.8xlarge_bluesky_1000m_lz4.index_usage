------------------------------------------------------------------------------------------------------------------------
Index usage for query Q1:

 Sort  (cost=69519427.00..69519427.03 rows=13 width=40)
   Sort Key: (count(*)) DESC
   ->  Finalize GroupAggregate  (cost=69519423.40..69519426.75 rows=13 width=40)
         Group Key: (((data -> 'commit'::text) ->> 'collection'::text))
         ->  Gather Merge  (cost=69519423.40..69519426.43 rows=26 width=40)
               Workers Planned: 2
               ->  Sort  (cost=69518423.37..69518423.40 rows=13 width=40)
                     Sort Key: (((data -> 'commit'::text) ->> 'collection'::text))
                     ->  Partial HashAggregate  (cost=69518422.94..69518423.13 rows=13 width=40)
                           Group Key: ((data -> 'commit'::text) ->> 'collection'::text)
                           ->  Parallel Seq Scan on bluesky  (cost=0.00..67846651.20 rows=334354347 width=32)
 JIT:
   Functions: 7
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q2:

 Sort  (cost=534467372.01..534467372.04 rows=13 width=48)
   Sort Key: (count(*)) DESC
   ->  GroupAggregate  (cost=438967879.95..534467371.77 rows=13 width=48)
         Group Key: (((data -> 'commit'::text) ->> 'collection'::text))
         ->  Gather Merge  (cost=438967879.95..526916003.64 rows=755136794 width=569)
               Workers Planned: 2
               ->  Sort  (cost=438966879.92..439753480.75 rows=314640331 width=569)
                     Sort Key: (((data -> 'commit'::text) ->> 'collection'::text)), ((data ->> 'did'::text))
                     ->  Parallel Seq Scan on bluesky  (cost=0.00..71927510.45 rows=314640331 width=569)
                           Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text))
 JIT:
   Functions: 8
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q3:

 Finalize GroupAggregate  (cost=134562855.16..206828438.13 rows=473420435 width=72)
   Group Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
   ->  Gather Merge  (cost=134562855.16..188483396.27 rows=394517030 width=72)
         Workers Planned: 2
         ->  Partial GroupAggregate  (cost=134561855.14..142945342.03 rows=197258515 width=72)
               Group Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
               ->  Sort  (cost=134561855.14..135055001.43 rows=197258515 width=64)
                     Sort Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
                     ->  Parallel Seq Scan on bluesky  (cost=0.00..77718225.92 rows=197258515 width=64)
                           Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = ANY ('{app.bsky.feed.post,app.bsky.feed.repost,app.bsky.feed.like}'::text[])))
 JIT:
   Functions: 11
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q4:

 Limit  (cost=116709176.13..116709176.13 rows=3 width=40)
   ->  Sort  (cost=116709176.13..116885878.13 rows=70680802 width=40)
         Sort Key: (min(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))))
         ->  Finalize GroupAggregate  (cost=106788266.40..115795640.01 rows=70680802 width=40)
               Group Key: ((data ->> 'did'::text))
               ->  Gather Merge  (cost=106788266.40..114617626.65 rows=58900668 width=40)
                     Workers Planned: 2
                     ->  Partial GroupAggregate  (cost=106787266.37..107818028.06 rows=29450334 width=40)
                           Group Key: ((data ->> 'did'::text))
                           ->  Sort  (cost=106787266.37..106860892.21 rows=29450334 width=569)
                                 Sort Key: ((data ->> 'did'::text))
                                 ->  Parallel Seq Scan on bluesky  (cost=0.00..72935592.23 rows=29450334 width=569)
                                       Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
 JIT:
   Functions: 13
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q5:

 Limit  (cost=117901914.66..117901914.66 rows=3 width=64)
   ->  Sort  (cost=117901914.66..118078616.66 rows=70680802 width=64)
         Sort Key: ((EXTRACT(epoch FROM (max(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))) - min(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))))) * '1000'::numeric)) DESC
         ->  Finalize GroupAggregate  (cost=106788266.40..116988378.54 rows=70680802 width=64)
               Group Key: ((data ->> 'did'::text))
               ->  Gather Merge  (cost=106788266.40..115133007.49 rows=58900668 width=48)
                     Workers Planned: 2
                     ->  Partial GroupAggregate  (cost=106787266.37..108333408.91 rows=29450334 width=48)
                           Group Key: ((data ->> 'did'::text))
                           ->  Sort  (cost=106787266.37..106860892.21 rows=29450334 width=569)
                                 Sort Key: ((data ->> 'did'::text))
                                 ->  Parallel Seq Scan on bluesky  (cost=0.00..72935592.23 rows=29450334 width=569)
                                       Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
 JIT:
   Functions: 13
   Options: Inlining true, Optimization true, Expressions true, Deforming true
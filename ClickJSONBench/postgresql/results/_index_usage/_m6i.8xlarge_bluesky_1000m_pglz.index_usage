------------------------------------------------------------------------------------------------------------------------
Index usage for query Q1:

 Sort  (cost=69897029.86..69897029.89 rows=13 width=40)
   Sort Key: (count(*)) DESC
   ->  Finalize GroupAggregate  (cost=69897026.26..69897029.62 rows=13 width=40)
         Group Key: (((data -> 'commit'::text) ->> 'collection'::text))
         ->  Gather Merge  (cost=69897026.26..69897029.29 rows=26 width=40)
               Workers Planned: 2
               ->  Sort  (cost=69896026.24..69896026.27 rows=13 width=40)
                     Sort Key: (((data -> 'commit'::text) ->> 'collection'::text))
                     ->  Partial HashAggregate  (cost=69896025.80..69896025.99 rows=13 width=40)
                           Group Key: ((data -> 'commit'::text) ->> 'collection'::text)
                           ->  Parallel Seq Scan on bluesky  (cost=0.00..68213928.60 rows=336419440 width=32)
 JIT:
   Functions: 7
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q2:

 Sort  (cost=533218266.90..533218266.93 rows=13 width=48)
   Sort Key: (count(*)) DESC
   ->  GroupAggregate  (cost=437166993.49..533218266.66 rows=13 width=48)
         Group Key: (((data -> 'commit'::text) ->> 'collection'::text))
         ->  Gather Merge  (cost=437166993.49..525623267.88 rows=759499858 width=568)
               Workers Planned: 2
               ->  Sort  (cost=437165993.47..437957139.15 rows=316458274 width=568)
                     Sort Key: (((data -> 'commit'::text) ->> 'collection'::text)), ((data ->> 'did'::text))
                     ->  Parallel Seq Scan on bluesky  (cost=0.00..72319365.77 rows=316458274 width=568)
                           Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text))
 JIT:
   Functions: 8
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q3:

 Finalize GroupAggregate  (cost=134776076.46..206825424.55 rows=472003856 width=72)
   Group Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
   ->  Gather Merge  (cost=134776076.46..188535275.14 rows=393336546 width=72)
         Workers Planned: 2
         ->  Partial GroupAggregate  (cost=134775076.44..143133478.04 rows=196668273 width=72)
               Group Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
               ->  Sort  (cost=134775076.44..135266747.12 rows=196668273 width=64)
                     Sort Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
                     ->  Parallel Seq Scan on bluesky  (cost=0.00..78105780.64 rows=196668273 width=64)
                           Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = ANY ('{app.bsky.feed.post,app.bsky.feed.repost,app.bsky.feed.like}'::text[])))
 JIT:
   Functions: 11
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q4:

 Limit  (cost=118661659.29..118661659.29 rows=3 width=40)
   ->  Sort  (cost=118661659.29..118846281.04 rows=73848702 width=40)
         Sort Key: (min(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))))
         ->  Finalize GroupAggregate  (cost=108296096.38..117707178.66 rows=73848702 width=40)
               Group Key: ((data ->> 'did'::text))
               ->  Gather Merge  (cost=108296096.38..116476366.96 rows=61540584 width=40)
                     Workers Planned: 2
                     ->  Partial GroupAggregate  (cost=108295096.35..109372056.57 rows=30770292 width=40)
                           Group Key: ((data ->> 'did'::text))
                           ->  Sort  (cost=108295096.35..108372022.08 rows=30770292 width=568)
                                 Sort Key: ((data ->> 'did'::text))
                                 ->  Parallel Seq Scan on bluesky  (cost=0.00..73337145.93 rows=30770292 width=568)
                                       Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
 JIT:
   Functions: 13
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q5:

 Limit  (cost=119907856.12..119907856.13 rows=3 width=64)
   ->  Sort  (cost=119907856.12..120092477.88 rows=73848702 width=64)
         Sort Key: ((EXTRACT(epoch FROM (max(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))) - min(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))))) * '1000'::numeric)) DESC
         ->  Finalize GroupAggregate  (cost=108296096.38..118953375.49 rows=73848702 width=64)
               Group Key: ((data ->> 'did'::text))
               ->  Gather Merge  (cost=108296096.38..117014847.07 rows=61540584 width=48)
                     Workers Planned: 2
                     ->  Partial GroupAggregate  (cost=108295096.35..109910536.68 rows=30770292 width=48)
                           Group Key: ((data ->> 'did'::text))
                           ->  Sort  (cost=108295096.35..108372022.08 rows=30770292 width=568)
                                 Sort Key: ((data ->> 'did'::text))
                                 ->  Parallel Seq Scan on bluesky  (cost=0.00..73337145.93 rows=30770292 width=568)
                                       Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
 JIT:
   Functions: 13
   Options: Inlining true, Optimization true, Expressions true, Deforming true
------------------------------------------------------------------------------------------------------------------------
Index usage for query Q1:

 Sort  (cost=80908.34..80908.37 rows=13 width=40)
   Sort Key: (count(*)) DESC
   ->  Finalize GroupAggregate  (cost=80904.74..80908.10 rows=13 width=40)
         Group Key: (((data -> 'commit'::text) ->> 'collection'::text))
         ->  Gather Merge  (cost=80904.74..80907.77 rows=26 width=40)
               Workers Planned: 2
               ->  Sort  (cost=79904.72..79904.75 rows=13 width=40)
                     Sort Key: (((data -> 'commit'::text) ->> 'collection'::text))
                     ->  Partial HashAggregate  (cost=79904.28..79904.48 rows=13 width=40)
                           Group Key: ((data -> 'commit'::text) ->> 'collection'::text)
                           ->  Parallel Seq Scan on bluesky  (cost=0.00..77820.21 rows=416814 width=32)

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q2:

 Sort  (cost=266492.26..266492.30 rows=13 width=48)
   Sort Key: (count(*)) DESC
   ->  GroupAggregate  (cost=0.55..266492.02 rows=13 width=48)
         Group Key: ((data -> 'commit'::text) ->> 'collection'::text)
         ->  Index Scan using idx_bluesky on bluesky  (cost=0.55..256985.18 rows=950665 width=568)
               Index Cond: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text))
 JIT:
   Functions: 7
   Options: Inlining false, Optimization false, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q3:

 Finalize GroupAggregate  (cost=120874.61..207416.29 rows=566945 width=72)
   Group Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
   ->  Gather Merge  (cost=120874.61..185447.18 rows=472454 width=72)
         Workers Planned: 2
         ->  Partial GroupAggregate  (cost=119874.59..129914.24 rows=236227 width=72)
               Group Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
               ->  Sort  (cost=119874.59..120465.16 rows=236227 width=64)
                     Sort Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
                     ->  Parallel Seq Scan on bluesky  (cost=0.00..89908.55 rows=236227 width=64)
                           Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = ANY ('{app.bsky.feed.post,app.bsky.feed.repost,app.bsky.feed.like}'::text[])))
 JIT:
   Functions: 11
   Options: Inlining false, Optimization false, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q4:

 Limit  (cost=106867.26..106867.26 rows=3 width=40)
   ->  Sort  (cost=106867.26..106972.34 rows=42034 width=40)
         Sort Key: (min(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))))
         ->  Finalize HashAggregate  (cost=105798.55..106323.97 rows=42034 width=40)
               Group Key: ((data ->> 'did'::text))
               ->  Gather  (cost=96837.92..105432.81 rows=73148 width=40)
                     Workers Planned: 2
                     ->  Partial GroupAggregate  (cost=95837.92..97118.01 rows=36574 width=40)
                           Group Key: ((data ->> 'did'::text))
                           ->  Sort  (cost=95837.92..95929.35 rows=36574 width=568)
                                 Sort Key: ((data ->> 'did'::text))
                                 ->  Parallel Bitmap Heap Scan on bluesky  (cost=7307.72..83811.88 rows=36574 width=568)
                                       Recheck Cond: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
                                       ->  Bitmap Index Scan on idx_bluesky  (cost=0.00..7285.78 rows=87778 width=0)
                                             Index Cond: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
 JIT:
   Functions: 12
   Options: Inlining false, Optimization false, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q5:

 Limit  (cost=108005.43..108005.43 rows=3 width=64)
   ->  Sort  (cost=108005.43..108110.51 rows=42034 width=64)
         Sort Key: ((EXTRACT(epoch FROM (max(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))) - min(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))))) * '1000'::numeric)) DESC
         ->  Finalize HashAggregate  (cost=106621.46..107462.14 rows=42034 width=64)
               Group Key: ((data ->> 'did'::text))
               ->  Gather  (cost=96837.92..106072.85 rows=73148 width=48)
                     Workers Planned: 2
                     ->  Partial GroupAggregate  (cost=95837.92..97758.05 rows=36574 width=48)
                           Group Key: ((data ->> 'did'::text))
                           ->  Sort  (cost=95837.92..95929.35 rows=36574 width=568)
                                 Sort Key: ((data ->> 'did'::text))
                                 ->  Parallel Bitmap Heap Scan on bluesky  (cost=7307.72..83811.88 rows=36574 width=568)
                                       Recheck Cond: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
                                       ->  Bitmap Index Scan on idx_bluesky  (cost=0.00..7285.78 rows=87778 width=0)
                                             Index Cond: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
 JIT:
   Functions: 12
   Options: Inlining false, Optimization false, Expressions true, Deforming true